version: '3.8'

services:
  redis-live-data:
    image: redis
    ports:
      - "6379:6379"
    networks:
      - my-network
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  redis-queue:
    image: redis
    ports:
      - "6380:6379"
    networks:
      - my-network
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  postgres:
    image: timescale/timescaledb:latest-pg12
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=forexdb
      - POSTGRES_USER=forexuser
      - POSTGRES_PASSWORD=forexpassword
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - my-network
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  node:
    build: 
      context: ./modules/LiveDataCollector
    volumes:
      - ./modules/LiveDataCollector/src:/usr/src/app/src
    ports:
      - "3101:3000"
    depends_on:
      - redis-live-data
    networks:
      - my-network
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  airflow-webserver:
    image: apache/airflow:2.1.0
    environment:
      - LOAD_EX=n
      - EXECUTOR=Local
    volumes:
      - ./services/airflow/dags:/usr/local/airflow/dags
      - ./services/airflow/logs:/usr/local/airflow/logs
      - ./services/airflow/plugins:/usr/local/airflow/plugins
    ports:
      - "8080:8080"
    command: webserver
    depends_on:
      - redis-queue
      - postgres
    networks:
      - my-network
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  airflow-scheduler:
    image: apache/airflow:2.1.0
    environment:
      - LOAD_EX=n
      - EXECUTOR=Local
    volumes:
      - ./services/airflow/dags:/usr/local/airflow/dags
      - ./services/airflow/logs:/usr/local/airflow/logs
      - ./services/airflow/plugins:/usr/local/airflow/plugins
    depends_on:
      - redis-queue
      - postgres
    networks:
      - my-network
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  elasticsearch:
    image: elasticsearch:7.9.3
    environment:
      - discovery.type=single-node
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - my-network
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  logstash:
    image: logstash:7.9.3
    ports:
      - "5000:5000"
    volumes:
      - ./services/logstash/pipeline:/usr/share/logstash/pipeline
    networks:
      - my-network
    depends_on:
      - elasticsearch
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  kibana:
    image: kibana:7.9.3
    ports:
      - "5601:5601"
    networks:
      - my-network
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  filebeat:
    image: elastic/filebeat:8.11.3
    user: root
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./services/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
    networks:
      - my-network
    command: -e -strict.perms=false
    depends_on:
      - logstash
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  # prometheus:
  #   image: prom/prometheus:v2.26.0
  #   volumes:
  #     - ./services/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #   ports:
  #     - "9090:9090"
  #   networks:
  #     - my-network
  #   logging:
  #     driver: json-file
  #     options:
  #       max-size: "10m"
  #       max-file: "3"
  supervisor:
    build: ./services/supervisor/  # Path to your Dockerfile
    ports:
      - "9001:9001"  # Expose Supervisor web interface
    volumes:
      - ./services/supervisor/conf.d:/etc/supervisor/conf.d  # Mount your Supervisor configuration
  fastapi:
    build: ./modules/RestAPI
    volumes:
      - ./modules/RestAPI/src:/app
    ports:
      - "8000:8000"
  python-scripts:
    build:
      context: ./modules/python-scripts
    volumes:
      - ./modules/python-scripts/src:/usr/src/app/src
    user: root
    depends_on:
      - redis-live-data
      - redis-queue  
    networks:
      - my-network
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
  
  process-data:
    build:
      context: ./modules/processData
    volumes:
      - ./modules/processData/src:/usr/src/app/src
    user: root
    depends_on:
      - redis-queue  
    networks:
      - my-network
    environment:
      - POSTGRES_DB=forexdb
      - POSTGRES_USER=forexuser
      - POSTGRES_PASSWORD=forexpassword
      - POSTGRES_HOST=postgres
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
  
  historical_price:
    build:
      context: ./modules/HistoricalPriceApi
    volumes:
      - ./modules/HistoricalPriceApi/src:/usr/src/app/src
    user: root
    depends_on:
      - postgres
    networks:
      - my-network
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
  ctrader_fix_live:
    build:
      context: ./modules/LiveDataCollector/Ctrader
    volumes:
      - ./modules/LiveDataCollector/Ctrader/src:/usr/src/app/src
    user: root
    depends_on:
      - postgres
    networks:
      - my-network
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
networks:
  my-network:
    driver: bridge

volumes:
  postgres-data:
  elasticsearch-data:
